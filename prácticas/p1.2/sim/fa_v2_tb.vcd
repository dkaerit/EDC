$date
	Thu Nov 05 09:05:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cal_tb $end
$var wire 1 ! test_out $end
$var wire 1 " test_cout $end
$var reg 1 # test_a $end
$var reg 1 $ test_b $end
$var reg 1 % test_cin $end
$var reg 1 & test_l $end
$var reg 2 ' test_s [1:0] $end
$scope module cal1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % c_in $end
$var wire 1 & l $end
$var wire 2 ( s [1:0] $end
$var wire 1 ) sum_int $end
$var wire 1 ! out $end
$var wire 1 * cl_int $end
$var wire 1 " c_out $end
$scope module cl1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 2 + s [1:0] $end
$var wire 1 , s_and $end
$var wire 1 - s_not $end
$var wire 1 . s_or $end
$var wire 1 / s_xor $end
$var wire 1 * out $end
$scope module mux $end
$var wire 1 , e0 $end
$var wire 1 . e1 $end
$var wire 1 / e2 $end
$var wire 1 - e3 $end
$var wire 2 0 s [1:0] $end
$var reg 1 * out $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 ) sum $end
$var wire 1 " cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module compl1 $end
$var wire 4 1 Ent [3:0] $end
$var wire 1 2 cpl $end
$var wire 4 3 Sal [3:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz 3
z2
bz 1
b0 0
0/
0.
1-
0,
b0 +
0*
0)
b0 (
b0 '
0&
0%
0$
0#
0"
0!
$end
#2000
1.
1/
1)
1&
1$
#4000
1!
1*
0-
b10 '
b10 (
b10 +
b10 0
0$
1#
#6000
0!
0*
1,
0/
0)
1"
b11 '
b11 (
b11 +
b11 0
1$
#8000
1!
0"
0,
0.
1-
1)
b10 '
b10 (
b10 +
b10 0
0&
0$
0#
1%
#10000
0!
1*
1.
1/
0)
1"
b11 '
b11 (
b11 +
b11 0
1$
#12000
0*
0-
b0 '
b0 (
b0 +
b0 0
0$
1#
#14000
1*
1!
1,
0/
1)
1$
#16000
